from simple_term_menu import TerminalMenu
from pyfiglet import Figlet
import target
import os
import backend

exit_program = False 
project_directory_path = None  # Global variable to store project directory path

def main():
    global project_directory_path  # Add this line to indicate that we're modifying the global variable
    custom_fig = Figlet(font='graffiti')
    print(custom_fig.renderText('Pentest_CL'))
    print("\n\n-----------------------------------------------------------------------------")
    print("Made by Zoogs for you degens - run it as root if you want to run network scans")
    print("-----------------------------------------------------------------------------\n\n")

    project_options = ["Start a new project", "Open existing project"]
    project_menu = TerminalMenu(project_options)
    project_choice = project_menu.show()

    if project_choice == 0:
        project_directory_path = create_project_directory()  # Update project_directory_path
    elif project_choice == 1:
        project_directory_path = open_existing_project()  # Update project_directory_path
    else:
        print("Invalid choice.")

    starting_menu()

def create_project_directory():
    global project_directory_path  # modifying global
    project_name = input("Enter the name of the new project: ")
    project_directory = os.path.join(os.getcwd(), project_name)
    if not os.path.exists(project_directory):
        os.makedirs(project_directory)
        print(f"\nNew project directory '{project_name}' created successfully.")
        backend.initialize_database(project_directory)  # Initialize the database
        return project_directory  # Return project directory path
    else:
        print(f"Directory '{project_name}' already exists.")
        return project_directory  # Return project directory path

def open_existing_project():
    global project_directory_path  # Add this line to indicate that we're modifying the global variable
    project_path = input("Enter the path of the existing project directory: ")
    if os.path.exists(project_path) and os.path.isdir(project_path):
        print(f"\nOpened existing project directory '{os.path.basename(project_path)}'.\n")
        return project_path  # Return project directory path
    else:
        print("Invalid project directory path.")
        return None  # Return None if project directory path is invalid

def starting_menu():
    global exit_program
    global project_directory_path  # Add this line to access the global variable

    print("\n")
    while not exit_program:
        options = ["Target Options", "entry 2", "Exit"]
        terminal_menu = TerminalMenu(options)
        menu_entry_index = terminal_menu.show()

        match options[menu_entry_index]:
            case "Target Options":
                target.targets_menu(project_directory_path)  # Pass project_directory_path to targets_menu()
            case "Exit":
                exit_program = True

if __name__ == "__main__":
    main()
