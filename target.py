from simple_term_menu import TerminalMenu
import os
import backend  # Import the backend module

def add_ips_to_database(project_directory_path):
    backend.add_ips_to_database(project_directory_path)

def open_and_append_file(project_directory_path):
    backend.open_and_append_file(project_directory_path)

def remove_single_target(project_directory_path):
    backend.remove_single_target(project_directory_path)

def remove_all_targets(project_directory_path):
    backend.remove_all_targets(project_directory_path)

def remove_targets(project_directory_path):
    backend.remove_targets(project_directory_path)

def targets_menu(project_directory_path):
    if not project_directory_path:
        print("Project directory path is not set.")
        return

    options = ["List targets", "Add IPs", "Open file of IPs", "Remove target(s)", "Back to main menu"]
    print("\n-----------------------------------------------------------------------------\n")
    target_menu = TerminalMenu(options)
    target_entry_index = target_menu.show()

    
    match options[target_entry_index]:
        case "Add IPs":
            add_ips_to_database(project_directory_path)
        case "Open file of IPs":
            open_and_append_file(project_directory_path)
        case "Remove target(s)":
            list_targets(project_directory_path)
            remove_targets(project_directory_path)
        case "List targets":
            list_targets(project_directory_path)  # Call list_targets function defined below
        case "Back to main menu":
            pentest_cl.starting_menu()

def list_targets(project_directory_path):
    if not project_directory_path:
        print("Project directory path is not set.")
        return

    targets = backend.list_targets(project_directory_path)  # Get targets from the database
    if targets:
        print("\nCurrent targets:")
        for i, target in enumerate(targets):
            print(f"{i + 1}. {target[0]}")
    else:
        print("\n-----------------------------------------------------------------------------\n")

